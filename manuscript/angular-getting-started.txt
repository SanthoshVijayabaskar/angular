# Introduction

## Course Objective
This course aims to teach you Angular 6 from beginner to advanced level using bite-sized lessons and hands-on exercises.

You will do a real-world project during the workshop to reinforce your
understanding and learn the necessary tools & best practices to become a successful Front-end Engineer.

## Audience

* Front-end Developer
* UI Engineer / Programmer
* Full Stack Web Developer

## Pre-requisite

* Basic HTML knowledge is mandatory.
* Basic programming knowledge is good to have.
* No Prior Angular Programming Experience is needed.

## Software Requirements

* [Node JS](https://nodejs.org/en/) - Runtime which is required by Angular Dev tools
* [Visual Studio Code](https://code.visualstudio.com/) - Editor used to write angular code
* [Angular CLI](https://cli.angular.io/) - Utility to generate angular code
* [Mockoon](https://mockoon.com/) - Fake REST API Server
* [GIT](https://git-scm.com/downloads) - Version Control

# Angular Getting Started

## First Generation Web

3 Basic files which constitutes a web page are,

1) HTML - Defines the structure of the web page. Referred as 'The DOM - Document Object Model'
2) JavaScript - Defines the dynamic behavior of the web page, such as business logic, animation.
3) CSS - Defines the styling of the web page

{alt: "Simple Web Page"}
![Simple Web Page](first-gen-web-page.png)

I> You can't spell carbon without it!

{course-instructor: true}
In the first gen web page, HTML was often inferred powerful in rendering a page to the user. Hence we loaded the JS inside a HTML.
But with the advent of AJAX in 2005 and followed by powerful Javacript front-end frameworks, we started to realize the power of JavaScript.
React JS was the first JS Framework where we started to include the HTML templates within JavaScript providing JS the complete authority in rendering the page to the user.

Angular and other popular JavaScript Frameworks now-a-days load one single main.js file within the index.html file. As the browser loads the index.html, a process known as bootstraping
kicks-in and the complete control of the DOM is delegated to the JavaScript layer. This modern approach of loading a single HTML file led way to what we today know as "Single Page Web Application".
{course-instructor: false}
